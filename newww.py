{
  "cells": [
   {
    "cell_type": "code",
    "execution_count": 1,
    "metadata": {},
    "outputs": [],
    "source": [
     "import tkinter as tk\n",
     "from tkinter import *"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": 3,
    "metadata": {},
    "outputs": [],
    "source": [
     "m = tk.Tk()\n",
     "m.title(\"Quiz App\")\n",
     "\n",
     "fname = Canvas(height=410,width=620)\n",
     "fname.pack(side=TOP)\n",
     "\n",
     "img = PhotoImage(file=\"output-onlinepngtools.png\")\n",
     "image = fname.create_image(315,210,image=img)\n",
     "\n",
     "button = tk.Button(m, text='Start', width=25) \n",
     "button.configure(width = 10, activebackground = \"#33B5E5\", relief = FLAT)\n",
     "button_window = fname.create_window(10, 10, anchor=NW, window=button)\n",
     "button.pack()\n",
     "fname.pack()\n",
     "\n",
     "m.mainloop()"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": 92,
    "metadata": {},
    "outputs": [],
    "source": [
     "from tkinter import *\n",
     "\n"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": 5,
    "metadata": {},
    "outputs": [],
    "source": [
     "import tkinter as tk\n",
     "from tkinter import *\n",
     "def loginPage():\n",
     "    login = Tk()\n",
     "    login_canvas = Canvas(login,width=720,height=440,bg=\"#101357\")\n",
     "    login_canvas.pack()\n",
     "\n",
     "    login_frame = Frame(login_canvas,bg=\"white\")\n",
     "    login_frame.place(relwidth=0.8,relheight=0.8,relx=0.1,rely=0.1)\n",
     "\n",
     "    heading = Label(login_frame,text=\"Quiz App Login\",fg=\"black\",bg=\"white\")\n",
     "    heading.config(font=('calibri 40'))\n",
     "    heading.place(relx=0.2,rely=0.1)\n",
     "\n",
     "    ulabel = Label(login_frame,text=\"Username\",fg='black',bg='white')\n",
     "    ulabel.place(relx=0.21,rely=0.4)\n",
     "    uname = Entry(login_frame,bg='#d3d3d3',fg='white')\n",
     "    uname.config(width=42)\n",
     "    uname.place(relx=0.31,rely=0.4)\n",
     "\n",
     "    plabel = Label(login_frame,text=\"Password\",fg='black',bg='white')\n",
     "    plabel.place(relx=0.215,rely=0.5)\n",
     "    pas = Entry(login_frame,bg='#d3d3d3',fg='white')\n",
     "    pas.config(width=42)\n",
     "    pas.place(relx=0.31,rely=0.5)\n",
     "\n",
     "    log = Button(login_frame,text='Login',padx=5,pady=5,width=5,command=menu)\n",
     "    log.configure(width = 15,height=1, activebackground = \"#33B5E5\", relief = FLAT)\n",
     "    log.place(relx=0.4,rely=0.6)\n",
     "\n",
     "    login.mainloop()\n",
     "    \n",
     "def menu():\n",
     "    s = Tk()\n",
     "    img = PhotoImage(file=\"output-onlinepngtools.png\")\n",
     "    wel = Label(s,text='WELCOME TO QUIZ STATION',fg=\"red\") \n",
     "    wel.config(font=('storm 35'),relief=RAISED)\n",
     "    wel.grid(column = 0 , row = 0)\n",
     "    s.mainloop()\n",
     "    \n",
     "def start():\n",
     "    root = Tk()\n",
     "    canvas = Canvas(root,width = 720,height = 440, bg = 'yellow')\n",
     "    canvas.grid(column = 0 , row = 1)\n",
     "    img = PhotoImage(file=\"output-onlinepngtools.png\")\n",
     "    canvas.create_image(50,10,image=img,anchor=NW)\n",
     "\n",
     "    button = Button(root, text='Start',command = loginPage) \n",
     "    button.configure(width = 102,height=2, activebackground = \"#33B5E5\", relief = RAISED)\n",
     "    button.grid(column = 0 , row = 2)\n",
     "\n",
     "    root.mainloop()\n",
     "    \n",
     "if __name__=='__main__':\n",
     "    start()"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": 6,
    "metadata": {},
    "outputs": [],
    "source": [
     "import tkinter\n",
     "\n",
     "def page1():\n",
     "    page2text.pack_forget()\n",
     "    page1text.pack()\n",
     "\n",
     "def page2():\n",
     "    page1text.pack_forget()\n",
     "    page2text.pack()\n",
     "\n",
     "window = tkinter.Tk()\n",
     "\n",
     "page1btn = tkinter.Button(window, text=\"Page 1\", command=page1)\n",
     "page2btn = tkinter.Button(window, text=\"Page 2\", command=page2)\n",
     "\n",
     "page1text = tkinter.Label(window, text=\"This is page 1\")\n",
     "page2text = tkinter.Label(window, text=\"This is page 2\")\n",
     "\n",
     "page1btn.pack()\n",
     "page2btn.pack()\n",
     "page1text.pack()\n",
     "window.mainloop()"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": 5,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
       "[('Vishal Singh', 'Vishal023', 'Vishal123', 'India'), ('Aditya Aggarwal', 'Adi786', '123456', 'India')]\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
       "Exception in Tkinter callback\n",
       "Traceback (most recent call last):\n",
       "  File \"D:\\Anaconda\\lib\\tkinter\\__init__.py\", line 1702, in __call__\n",
       "    return self.func(*args)\n",
       "  File \"<ipython-input-5-21bb3c78209a>\", line 38, in check\n",
       "    for u,p in logdata:\n",
       "ValueError: too many values to unpack (expected 2)\n"
      ]
     }
    ],
    "source": [
     "import tkinter as tk\n",
     "from tkinter import *\n",
     "import sqlite3 \n",
     "\n",
     "def loginPage(logdata):\n",
     "    sup.destroy()\n",
     "    global login\n",
     "    login = Tk()\n",
     "    \n",
     "    user_name = StringVar()\n",
     "    password = StringVar()\n",
     "    \n",
     "    login_canvas = Canvas(login,width=720,height=440,bg=\"#101357\")\n",
     "    login_canvas.pack()\n",
     "\n",
     "    login_frame = Frame(login_canvas,bg=\"white\")\n",
     "    login_frame.place(relwidth=0.8,relheight=0.8,relx=0.1,rely=0.1)\n",
     "\n",
     "    heading = Label(login_frame,text=\"Quiz App Login\",fg=\"black\",bg=\"white\")\n",
     "    heading.config(font=('calibri 40'))\n",
     "    heading.place(relx=0.2,rely=0.1)\n",
     "\n",
     "    #USER NAME\n",
     "    ulabel = Label(login_frame,text=\"Username\",fg='black',bg='white')\n",
     "    ulabel.place(relx=0.21,rely=0.4)\n",
     "    uname = Entry(login_frame,bg='#d3d3d3',fg='white',textvariable = user_name)\n",
     "    uname.config(width=42)\n",
     "    uname.place(relx=0.31,rely=0.4)\n",
     "\n",
     "    #PASSWORD\n",
     "    plabel = Label(login_frame,text=\"Password\",fg='black',bg='white')\n",
     "    plabel.place(relx=0.215,rely=0.5)\n",
     "    pas = Entry(login_frame,bg='#d3d3d3',fg='white',textvariable = password)\n",
     "    pas.config(width=42)\n",
     "    pas.place(relx=0.31,rely=0.5)\n",
     "\n",
     "    def check():\n",
     "        for u,p in logdata:\n",
     "            if u == uname.get() and p == pas.get():\n",
     "                log.command(menu)\n",
     "    \n",
     "    #LOGIN BUTTON\n",
     "    log = Button(login_frame,text='Login',padx=5,pady=5,width=5,command=check)\n",
     "    log.configure(width = 15,height=1, activebackground = \"#33B5E5\", relief = FLAT)\n",
     "    log.place(relx=0.4,rely=0.6)\n",
     "    \n",
     "    \n",
     "    login.mainloop()\n",
     "\n",
     "def signUpPage():\n",
     "    root.destroy()\n",
     "    global sup\n",
     "    sup = Tk()\n",
     "    \n",
     "    fname = StringVar()\n",
     "    uname = StringVar()\n",
     "    passW = StringVar()\n",
     "    country = StringVar()\n",
     "    \n",
     "    \n",
     "    sup_canvas = Canvas(sup,width=720,height=440,bg=\"#101357\")\n",
     "    sup_canvas.pack()\n",
     "\n",
     "    sup_frame = Frame(sup_canvas,bg=\"white\")\n",
     "    sup_frame.place(relwidth=0.8,relheight=0.8,relx=0.1,rely=0.1)\n",
     "\n",
     "    heading = Label(sup_frame,text=\"Quiz App SignUp\",fg=\"black\",bg=\"white\")\n",
     "    heading.config(font=('calibri 40'))\n",
     "    heading.place(relx=0.2,rely=0.1)\n",
     "\n",
     "    #full name\n",
     "    flabel = Label(sup_frame,text=\"Full Name\",fg='black',bg='white')\n",
     "    flabel.place(relx=0.21,rely=0.4)\n",
     "    fname = Entry(sup_frame,bg='#d3d3d3',fg='white',textvariable = fname)\n",
     "    fname.config(width=42)\n",
     "    fname.place(relx=0.31,rely=0.4)\n",
     "\n",
     "    #username\n",
     "    ulabel = Label(sup_frame,text=\"Username\",fg='black',bg='white')\n",
     "    ulabel.place(relx=0.21,rely=0.5)\n",
     "    user = Entry(sup_frame,bg='#d3d3d3',fg='white',textvariable = uname)\n",
     "    user.config(width=42)\n",
     "    user.place(relx=0.31,rely=0.5)\n",
     "    \n",
     "    \n",
     "    #password\n",
     "    plabel = Label(sup_frame,text=\"Password\",fg='black',bg='white')\n",
     "    plabel.place(relx=0.215,rely=0.6)\n",
     "    pas = Entry(sup_frame,bg='#d3d3d3',fg='white',textvariable = passW)\n",
     "    pas.config(width=42)\n",
     "    pas.place(relx=0.31,rely=0.6)\n",
     "    \n",
     "    \n",
     "    \n",
     "    #country\n",
     "    clabel = Label(sup_frame,text=\"Country\",fg='black',bg='white')\n",
     "    clabel.place(relx=0.215,rely=0.7)\n",
     "    c = Entry(sup_frame,bg='#d3d3d3',fg='white',textvariable = country)\n",
     "    c.config(width=42)\n",
     "    c.place(relx=0.31,rely=0.7)\n",
     "    def addUserToDataBase():\n",
     "        \n",
     "        fullname = fname.get()\n",
     "        username = user.get()\n",
     "        password = pas.get()\n",
     "        country = c.get()\n",
     "        \n",
     "        conn = sqlite3.connect('quiz.db')\n",
     "        create = conn.cursor()\n",
     "        create.execute('CREATE TABLE IF NOT EXISTS userSignUp(FULLNAME text, USERNAME text,PASSWORD text,COUNTRY text)')\n",
     "        create.execute(\"INSERT INTO userSignUp VALUES (?,?,?,?)\",(fullname,username,password,country)) \n",
     "        conn.commit()\n",
     "        create.execute('SELECT * FROM userSignUp')\n",
     "        z=create.fetchall()\n",
     "        print(z)\n",
     "#        L2.config(text=\"Username is \"+z[0][0]+\"\\nPassword is \"+z[-1][1])\n",
     "        conn.close()\n",
     "        loginPage(z)\n",
     "    \n",
     "    #LOGIN BUTTON\n",
     "    log = Button(sup_frame,text='SignUp',padx=5,pady=5,width=5,command = addUserToDataBase)\n",
     "    log.configure(width = 15,height=1, activebackground = \"#33B5E5\", relief = FLAT)\n",
     "    log.place(relx=0.4,rely=0.8)\n",
     "  \n",
     "    sup.mainloop()\n",
     "    \n",
     "def menu():\n",
     "    login.destroy()\n",
     "    global menu \n",
     "    menu = Tk()\n",
     "    wel = Label(menu,text='WELCOME TO QUIZ STATION',fg=\"red\") \n",
     "    wel.config(font=('storm 35'),relief=RAISED)\n",
     "    wel.grid(column = 0 , row = 0)\n",
     "    menu.mainloop()\n",
     "    \n",
     "def start():\n",
     "    global root \n",
     "    root = Tk()\n",
     "    canvas = Canvas(root,width = 720,height = 440, bg = 'yellow')\n",
     "    canvas.grid(column = 0 , row = 1)\n",
     "    img = PhotoImage(file=\"output-onlinepngtools.png\")\n",
     "    canvas.create_image(50,10,image=img,anchor=NW)\n",
     "\n",
     "    button = Button(root, text='Start',command = signUpPage) \n",
     "    button.configure(width = 102,height=2, activebackground = \"#33B5E5\", relief = RAISED)\n",
     "    button.grid(column = 0 , row = 2)\n",
     "\n",
     "    root.mainloop()\n",
     "    \n",
     "if __name__=='__main__':\n",
     "    start()\n",
     "    #signUpPage()"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": 51,
    "metadata": {},
    "outputs": [],
    "source": [
     "import sqlite3 \n",
     "conn = sqlite3.connect('quiz.db')\n",
     "c = conn.cursor() \n",
     "# Create table \n",
     "conn.close() "
    ]
   },
   {
    "cell_type": "code",
    "execution_count": 1,
    "metadata": {},
    "outputs": [],
    "source": [
     "x = [('hvhjvhj', 'pass@123'), ('hvhjvhj', 'pass@123'), ('hvhjvhjhj', 'pass@123'), ('a', 'pass@123'), ('df', 'pass@123')]"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": 8,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
       "hvhjvhj pass@123\n"
      ]
     }
    ],
    "source": [
     "for i,j in x:\n",
     "    print(i,j)\n",
     "    break"
    ]
   },
   {
    "cell_type": "code",
    "execution_count":null,
    "metadata": {},
    "outputs": [],
    "source": []
   }
  ],
  "metadata": {
   "kernelspec": {
    "display_name": "Python 3",
    "language": "python",
    "name": "python3"
   },
   "language_info": {
    "codemirror_mode": {
     "name": "ipython",
     "version": 3
    },
    "file_extension": ".py",
    "mimetype": "text/x-python",
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
    "version": "3.7.0"
   }
  },
  "nbformat": 4,